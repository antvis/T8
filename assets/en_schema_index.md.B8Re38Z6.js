import{_ as a,C as s,c as n,o as l,j as t,G as o,aO as r,a as p}from"./chunks/framework.t6I04aau.js";const f=JSON.parse('{"title":"Schema Introduction","description":"","frontmatter":{"title":"Schema Introduction"},"headers":[],"relativePath":"en/schema/index.md","filePath":"en/schema/index.md"}'),c={name:"en/schema/index.md"};function d(h,e,u,m,y,g){const i=s("CopyOrDownloadAsMarkdownButtons");return l(),n("div",null,[e[0]||(e[0]=t("div",{style:{display:"none"},hidden:"true","aria-hidden":"true"},"Are you an LLM? You can read better optimized documentation at /en/schema.md for this page in Markdown format",-1)),e[1]||(e[1]=t("h1",{id:"schema",tabindex:"-1"},[p("Schema "),t("a",{class:"header-anchor",href:"#schema","aria-label":'Permalink to "Schema"'},"​")],-1)),o(i),e[2]||(e[2]=r(`<h2 id="overview" tabindex="-1">Overview <a class="header-anchor" href="#overview" aria-label="Permalink to &quot;Overview&quot;">​</a></h2><p>T8 Schema is a JSON Schema specification for declaratively describing data interpretation reports. It provides a complete type system for building structured narrative text visualization content.</p><h2 id="core-concepts" tabindex="-1">Core Concepts <a class="header-anchor" href="#core-concepts" aria-label="Permalink to &quot;Core Concepts&quot;">​</a></h2><p>T8 Schema system includes the following core concepts:</p><ol><li><p><strong>NarrativeText</strong></p><ul><li>Acts as the top-level container for the entire document</li><li>Contains Headline and multiple Section blocks</li><li>Supports global style configuration</li></ul></li><li><p><strong>Section</strong></p><ul><li>Used to organize and manage collections of related paragraphs</li><li>Supports standard paragraph groups and custom blocks</li><li>Can be flexibly extended to accommodate different display requirements</li></ul></li><li><p><strong>Paragraph</strong></p><ul><li>Supports multiple paragraph types: headings, body text, lists, etc.</li><li>Each type has its specific structure and purpose</li><li>Can be extended through custom types</li></ul></li><li><p><strong>Phrase</strong></p><ul><li>Serves as the smallest unit of text composition</li><li>Includes plain text, entities, and custom phrases</li><li>Supports rich styling and interaction configuration</li></ul></li></ol><h2 id="type-system" tabindex="-1">Type System <a class="header-anchor" href="#type-system" aria-label="Permalink to &quot;Type System&quot;">​</a></h2><p>You can use T8&#39;s type definitions in TypeScript projects as follows:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  NarrativeTextSpec,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ParagraphSpec,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  PhraseSpec,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@antv/t8&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>The main type definitions include:</p><ul><li><code>NarrativeTextSpec</code>: Top-level document structure</li><li><code>SectionSpec</code>: Section block structure</li><li><code>ParagraphSpec</code>: Paragraph type definitions</li><li><code>PhraseSpec</code>: Phrase type definitions</li><li><code>EntityType</code>: Entity type enumeration</li><li><code>CommonProps</code>: Common property definitions</li></ul><h2 id="extensibility" tabindex="-1">Extensibility <a class="header-anchor" href="#extensibility" aria-label="Permalink to &quot;Extensibility&quot;">​</a></h2><p>T8 Schema has designed a comprehensive extension mechanism:</p><ol><li><p><strong>Custom Blocks</strong></p><ul><li>Extend through the <code>CustomBlockElement</code> interface</li><li>Can implement completely custom block structures</li></ul></li><li><p><strong>Custom Phrases</strong></p><ul><li>Extend through the <code>CustomPhraseSpec</code> interface</li><li>Supports custom metadata and rendering logic</li></ul></li><li><p><strong>Style System</strong></p><ul><li>All components support <code>CommonProps</code></li><li>Can customize styles through <code>styles</code> and <code>className</code></li></ul></li></ol><h2 id="detailed-documentation" tabindex="-1">Detailed Documentation <a class="header-anchor" href="#detailed-documentation" aria-label="Permalink to &quot;Detailed Documentation&quot;">​</a></h2><ul><li><a href="./structure.html">Overall Structure</a> - Understand the overall organization of the Schema</li><li>Type Definitions <ul><li><a href="./types/narrative-text.html">NarrativeText</a> - Top-level text structure</li><li><a href="./types/section.html">Section</a> - Section blocks</li><li><a href="./types/paragraph.html">Paragraph</a> - Paragraph types</li><li><a href="./types/phrase.html">Phrase &amp; Entity</a> - Phrases and entities</li></ul></li></ul>`,15))])}const S=a(c,[["render",d]]);export{f as __pageData,S as default};
