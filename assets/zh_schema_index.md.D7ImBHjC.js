import{_ as l,C as s,c as t,o as n,j as i,G as o,aO as r,a as p}from"./chunks/framework.YbF_XRCN.js";const y=JSON.parse('{"title":"Schema 介绍","description":"","frontmatter":{"title":"Schema 介绍"},"headers":[],"relativePath":"zh/schema/index.md","filePath":"zh/schema/index.md"}'),h={name:"zh/schema/index.md"};function d(c,a,m,u,k,g){const e=s("CopyOrDownloadAsMarkdownButtons");return n(),t("div",null,[a[0]||(a[0]=i("div",{style:{display:"none"},hidden:"true","aria-hidden":"true"},"Are you an LLM? You can read better optimized documentation at /zh/schema/index.md for this page in Markdown format",-1)),a[1]||(a[1]=i("h1",{id:"schema",tabindex:"-1"},[p("Schema "),i("a",{class:"header-anchor",href:"#schema","aria-label":'Permalink to "Schema"'},"​")],-1)),o(e),a[2]||(a[2]=r(`<h2 id="概述" tabindex="-1">概述 <a class="header-anchor" href="#概述" aria-label="Permalink to &quot;概述&quot;">​</a></h2><p>T8 Schema 是一套用于声明式描述数据解读报告的 JSON Schema 规范。它提供了一个完整的类型系统，用于构建结构化的叙事文本可视化内容。</p><h2 id="核心概念" tabindex="-1">核心概念 <a class="header-anchor" href="#核心概念" aria-label="Permalink to &quot;核心概念&quot;">​</a></h2><p>T8 Schema 系统主要包含以下核心概念：</p><ol><li><p><strong>叙事文本 (NarrativeText)</strong></p><ul><li>作为整个文档的顶层容器</li><li>包含标题（Headline）和多个段落区块（Section）</li><li>支持全局样式配置</li></ul></li><li><p><strong>段落区块 (Section)</strong></p><ul><li>用于组织和管理相关内容的段落集合</li><li>支持标准段落组和自定义区块</li><li>可以灵活扩展以适应不同的展示需求</li></ul></li><li><p><strong>段落 (Paragraph)</strong></p><ul><li>支持多种段落类型：标题、正文、列表等</li><li>每种类型都有其特定的结构和用途</li><li>可以通过自定义类型扩展</li></ul></li><li><p><strong>短语 (Phrase)</strong></p><ul><li>作为文本的最小组成单位</li><li>包括纯文本、实体和自定义短语</li><li>支持丰富的样式和交互配置</li></ul></li></ol><h2 id="类型系统" tabindex="-1">类型系统 <a class="header-anchor" href="#类型系统" aria-label="Permalink to &quot;类型系统&quot;">​</a></h2><p>通过以下方式可以在 TypeScript 项目中使用 T8 的类型定义：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  NarrativeTextSpec,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ParagraphSpec,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  PhraseSpec,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@antv/t8&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>主要的类型定义包括：</p><ul><li><code>NarrativeTextSpec</code>: 顶层文档结构</li><li><code>SectionSpec</code>: 段落区块结构</li><li><code>ParagraphSpec</code>: 段落类型定义</li><li><code>PhraseSpec</code>: 短语类型定义</li><li><code>EntityType</code>: 实体类型枚举</li><li><code>CommonProps</code>: 通用属性定义</li></ul><h2 id="扩展性" tabindex="-1">扩展性 <a class="header-anchor" href="#扩展性" aria-label="Permalink to &quot;扩展性&quot;">​</a></h2><p>T8 Schema 设计了完善的扩展机制：</p><ol><li><p><strong>自定义区块</strong></p><ul><li>通过 <code>CustomBlockElement</code> 接口扩展</li><li>可以实现完全自定义的区块结构</li></ul></li><li><p><strong>自定义短语</strong></p><ul><li>通过 <code>CustomPhraseSpec</code> 接口扩展</li><li>支持自定义元数据和渲染逻辑</li></ul></li><li><p><strong>样式系统</strong></p><ul><li>所有组件都支持 <code>CommonProps</code></li><li>可以通过 <code>styles</code> 和 <code>className</code> 自定义样式</li></ul></li></ol><h2 id="详细文档" tabindex="-1">详细文档 <a class="header-anchor" href="#详细文档" aria-label="Permalink to &quot;详细文档&quot;">​</a></h2><ul><li><a href="./structure.html">总体结构</a> - 了解 Schema 的整体组织结构</li><li>类型定义 <ul><li><a href="./types/narrative-text.html">NarrativeText</a> - 顶层文本结构</li><li><a href="./types/section.html">Section</a> - 段落区块</li><li><a href="./types/paragraph.html">Paragraph</a> - 段落类型</li><li><a href="./types/phrase.html">Phrase &amp; Entity</a> - 短语和实体</li></ul></li></ul>`,15))])}const S=l(h,[["render",d]]);export{y as __pageData,S as default};
